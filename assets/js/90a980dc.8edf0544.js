"use strict";(self.webpackChunksip_hass_docs=self.webpackChunksip_hass_docs||[]).push([[9398],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),d=p(n),f=o,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||i;return n?r.createElement(m,s(s({ref:t},l),{},{components:n})):r.createElement(m,s({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var p=2;p<i;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6342:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return a},metadata:function(){return p},toc:function(){return u}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),s=["components"],a={sidebar_position:4,title:"Integration",tags:["component","Asterisk"]},c=void 0,p={unversionedId:"developers/integration",id:"developers/integration",title:"Integration",description:"Here is everything you should know to help development with the integration.",source:"@site/docs/developers/integration.md",sourceDirName:"developers",slug:"/developers/integration",permalink:"/sip-hass-docs/docs/developers/integration",editUrl:"https://github.com/TECH7Fox/sip-hass-docs/edit/main/docs/developers/integration.md",tags:[{label:"component",permalink:"/sip-hass-docs/docs/tags/component"},{label:"Asterisk",permalink:"/sip-hass-docs/docs/tags/asterisk"}],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Integration",tags:["component","Asterisk"]},sidebar:"developersSidebar",previous:{title:"Card",permalink:"/sip-hass-docs/docs/developers/card"},next:{title:"Docs",permalink:"/sip-hass-docs/docs/developers/docs"}},l={},u=[{value:"About",id:"about",level:2},{value:"How to Test",id:"how-to-test",level:2}],d={toc:u};function f(e){var t=e.components,n=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Here is everything you should know to help development with the integration."),(0,i.kt)("p",null,"Thank you very much for your help!"),(0,i.kt)("h2",{id:"about"},"About"),(0,i.kt)("p",null,"The Asterisk integration is a custom component that connect's to the ",(0,i.kt)("strong",{parentName:"p"},"AMI")," (Asterisk Manager Interface) to get the status of the server and SIP endpoints and makes sensors for it."),(0,i.kt)("p",null,"The integration also has the ",(0,i.kt)("inlineCode",{parentName:"p"},"send_action")," service, which you can use to send any action to the AMI."),(0,i.kt)("h2",{id:"how-to-test"},"How to Test"),(0,i.kt)("p",null,"Run pytest to see that no current features break, or make a MR to use the CI on Github."),(0,i.kt)("p",null,"To test practially copy the ",(0,i.kt)("inlineCode",{parentName:"p"},"asterisk")," folder into your ",(0,i.kt)("inlineCode",{parentName:"p"},"custom_components")," folder and restart your HA. It should popup when adding the integration."))}f.isMDXComponent=!0}}]);