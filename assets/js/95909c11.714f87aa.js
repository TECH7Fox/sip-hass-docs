"use strict";(self.webpackChunksip_hass_docs=self.webpackChunksip_hass_docs||[]).push([[7244],{8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var s=t(6540);const o={},r=s.createContext(o);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:n},e.children)}},9521:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"developers/introduction","title":"Developer Documentation","description":"The developers section is for people who want to","source":"@site/docs/developers/introduction.md","sourceDirName":"developers","slug":"/developers/introduction","permalink":"/sip-hass-docs/docs/developers/introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/TECH7Fox/sip-hass-docs/edit/main/docs/developers/introduction.md","tags":[{"inline":true,"label":"developers","permalink":"/sip-hass-docs/docs/tags/developers"}],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"tags":["developers"]},"sidebar":"developersSidebar","next":{"title":"Introduction","permalink":"/sip-hass-docs/docs/developers/add-on/introduction"}}');var o=t(4848),r=t(8453);const i={sidebar_position:1,tags:["developers"]},a="Developer Documentation",d={},c=[{value:"Wide Architecture",id:"wide-architecture",level:2},{value:"Asterisk",id:"asterisk",level:2},{value:"SIP Core",id:"sip-core",level:2},{value:"Asterisk Integration",id:"asterisk-integration",level:2}];function l(e){const n={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",mermaid:"mermaid",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"developer-documentation",children:"Developer Documentation"})}),"\n",(0,o.jsx)(n.p,{children:"The developers section is for people who want to"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"work on the add-on, integration or SIP Core."}),"\n",(0,o.jsx)(n.li,{children:"create custom cards or popups for SIP Core."}),"\n",(0,o.jsx)(n.li,{children:"simply want to learn more about how the SIP-HASS projects works."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"For information on how to install, configure and use the SIP-HASS projects,\nplease see the user documentations."}),"\n",(0,o.jsx)(n.h2,{id:"wide-architecture",children:"Wide Architecture"}),"\n",(0,o.jsx)(n.p,{children:"This section explains the entire architecture of all SIP-HASS components and how they work together."}),"\n",(0,o.jsx)(n.p,{children:"This includes:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"SIP Core"}),"\n",(0,o.jsx)(n.li,{children:"SIP Cards (Contacts, Call, Popup, third-party)"}),"\n",(0,o.jsx)(n.li,{children:"Asterisk Integration"}),"\n",(0,o.jsx)(n.li,{children:"Asterisk Add-on"}),"\n"]}),"\n",(0,o.jsx)(n.mermaid,{value:'flowchart TD\n    subgraph ha-frontend [HA Frontend]\n        A[SIP Core] --\x3e|API| B[Contacts Card]\n        A --\x3e|API| C[Popup]\n        A --\x3e|API| E[Call Card]\n        D[sip-config.json] --\x3e|Configuration| A\n    end\n\n    subgraph supervisor [Supervisor / External]\n        G["Asterisk (Add-on)"] --\x3e |"API"| H[Supervisor]\n        G <--\x3e |"Websocket (ingress)"| A\n        G <--\x3e |"WebRTC"| A\n    end\n\n    subgraph ha-backend [HA Backend]\n        I[Asterisk Integration] <--\x3e |AMI| G\n    end'}),"\n",(0,o.jsx)(n.h2,{id:"asterisk",children:"Asterisk"}),"\n",(0,o.jsx)(n.p,{children:"Asterisk is the PBX that handles the actual calls, SIP endpoints, etc.\nOther PBXes will not work, since Asterisk is currently the only PBX\nthat supports WebRTC translation that I know of."}),"\n",(0,o.jsx)(n.p,{children:"I did try to make a FreePBX add-on, since it it pretty much just\na manager and web interface for Asterisk, but they add so much\noverhead and complexity that not only is impossible to maintain\nfor a container, but also has multiple bugs that make it unusable\nfor this project."}),"\n",(0,o.jsxs)(n.p,{children:["See the ",(0,o.jsx)(n.a,{href:"/docs/developers/add-on/introduction",children:"Asterisk Add-on"})," section for more information."]}),"\n",(0,o.jsx)(n.h2,{id:"sip-core",children:"SIP Core"}),"\n",(0,o.jsx)(n.p,{children:"SIP Core is the main component that handles all call management\nand communication to Asterisk. It provides an API for cards and other elements to use."}),"\n",(0,o.jsxs)(n.p,{children:["See the ",(0,o.jsx)(n.a,{href:"/docs/developers/card/introduction",children:"SIP Core"})," section for more information."]}),"\n",(0,o.jsx)(n.h2,{id:"asterisk-integration",children:"Asterisk Integration"}),"\n",(0,o.jsx)(n.p,{children:"The Asterisk integration is a custom component that connects to the Asterisk Manager Interface (AMI) and provides sensors and services for managing calls and endpoints."}),"\n",(0,o.jsx)(n.p,{children:"This integration is optional and not required to use the SIP Core or cards, but it provides additional functionality and integration with Home Assistant."}),"\n",(0,o.jsxs)(n.p,{children:["See the ",(0,o.jsx)(n.a,{href:"/sip-hass-docs/docs/developers/integration",children:"Asterisk Integration"})," section for more information."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);