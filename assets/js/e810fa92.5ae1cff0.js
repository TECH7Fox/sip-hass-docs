"use strict";(self.webpackChunksip_hass_docs=self.webpackChunksip_hass_docs||[]).push([[949],{1131:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"tutorial/card","title":"SIP Core & Cards","description":"Now we have a PBX to connect to, we can install the cards.","source":"@site/docs/tutorial/card.mdx","sourceDirName":"tutorial","slug":"/tutorial/card","permalink":"/sip-hass-docs/docs/tutorial/card","draft":false,"unlisted":false,"editUrl":"https://github.com/TECH7Fox/sip-hass-docs/edit/main/docs/tutorial/card.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Asterisk Add-on","permalink":"/sip-hass-docs/docs/tutorial/add-on"},"next":{"title":"Integration (optional)","permalink":"/sip-hass-docs/docs/tutorial/integration"}}');var t=s(4848),o=s(8453),a=s(1470),i=s(9365);const l={sidebar_position:3},d="SIP Core & Cards",c={},u=[{value:"Installation",id:"installation",level:2},{value:"Configure SIP Core",id:"configure-sip-core",level:2},{value:"Add the Card(s)",id:"add-the-cards",level:2},{value:"\ud83d\udcc7 Contacts Card",id:"-contacts-card",level:3},{value:"\ud83d\udcde Call Card (Optional)",id:"-call-card-optional",level:3},{value:"\ud83d\udee0\ufe0f Custom Cards",id:"\ufe0f-custom-cards",level:3},{value:"SSL",id:"ssl",level:2}];function h(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"sip-core--cards",children:"SIP Core & Cards"})}),"\n",(0,t.jsx)(n.p,{children:"Now we have a PBX to connect to, we can install the cards."}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["The card only works in HTTPS. This is required by modern browsers to send your mic/cam trough.\nYou can use something like ",(0,t.jsx)(n.strong,{children:"DuckDNS"})," or ",(0,t.jsx)(n.strong,{children:"Let's Encrypt"}),"."]})}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n","\n",(0,t.jsxs)(a.A,{groupId:"install-method",children:[(0,t.jsx)(i.A,{value:"hacs",label:"HACS",default:!0,children:(0,t.jsxs)("ol",{children:[(0,t.jsxs)("li",{children:["Go to ",(0,t.jsx)("b",{children:"HACS"})]}),(0,t.jsxs)("li",{children:["Click on ",(0,t.jsx)("b",{children:"Frontend"})]}),(0,t.jsxs)("li",{children:["Click on the 3 points in the upper right corner and click on ",(0,t.jsx)("b",{children:"Custom repositories"})]}),(0,t.jsxs)("li",{children:["Paste ",(0,t.jsx)("code",{children:(0,t.jsx)(n.a,{href:"https://github.com/TECH7Fox/sip-hass-card",children:"https://github.com/TECH7Fox/sip-hass-card"})})," into ",(0,t.jsx)("b",{children:"Add custom repository URL"})," and by category choose ",(0,t.jsx)("b",{children:"Lovelace"})]}),(0,t.jsx)("li",{children:"Click on add and check if the repository is there."}),(0,t.jsxs)("li",{children:["You should now see ",(0,t.jsx)("b",{children:"SIP Client"}),". Click ",(0,t.jsx)("b",{children:"INSTALL"})]})]})}),(0,t.jsx)(i.A,{value:"manual",label:"Manual",children:(0,t.jsxs)("ol",{children:[(0,t.jsxs)("li",{children:["Go to the ",(0,t.jsxs)(n.a,{href:"https://github.com/TECH7Fox/sip-hass-card/releases",children:["latest ",(0,t.jsx)(n.strong,{children:"stable"})," release on github"]}),"."]}),(0,t.jsxs)("li",{children:["Copy ",(0,t.jsx)("code",{children:"sipjs-card.js"})," to ",(0,t.jsx)("code",{children:"/config/www/"}),"."]}),(0,t.jsxs)("li",{children:["Add ",(0,t.jsx)("code",{children:"sipjs-card.js"})," to resources."]})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"configure-sip-core",children:"Configure SIP Core"}),"\n",(0,t.jsx)(n.p,{children:"Now that we have SIP Core installed, we need to configure it."}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["In ",(0,t.jsx)(n.code,{children:"/config/www/"}),", create a file called ",(0,t.jsx)(n.code,{children:"sip-config.json"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Copy the settings template from below into it."}),"\n"]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:"Settings Template"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="Complete SIP Core Configuration"',children:'{\n    "ice_config": {\n        "iceGatheringTimeout": 1000,\n        "iceCandidatePoolSize": 0,\n        "iceTransportPolicy": "all",\n        "iceServers": [\n            {\n                "urls": ["stun:stun.l.google.com:19302"]\n            }\n        ],\n        "rtcpMuxPolicy": "require"\n    },\n    "backup_user": {\n        "ha_username": "myusername",\n        "extension": "100",\n        "password": "mypassword"\n    },\n    "users": [\n        {\n            "ha_username": "myusername",\n            "extension": "100",\n            "password": "mypassword"\n        }\n    ],\n    "sip_video": false,\n    "auto_answer": false,\n    "popup_config": {\n        "auto_open": true,\n        "large": false,\n        "buttons": [],\n        "extensions": {}\n    }\n}\n'})})]}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsxs)(n.li,{children:["Change ",(0,t.jsx)(n.code,{children:"myusername"}),", ",(0,t.jsx)(n.code,{children:"extension"})," and ",(0,t.jsx)(n.code,{children:"mypassword"})," with your own Home Assistant username, SIP extension, and the password that you set in the add-on settings."]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["You can find the Home Assistant ",(0,t.jsx)(n.strong,{children:"usernames"})," in Settings > People > Users."]})}),"\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Save the file."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Reload your browser (use ",(0,t.jsx)("kbd",{children:"Ctrl"})," + ",(0,t.jsx)("kbd",{children:"Shift"})," + ",(0,t.jsx)("kbd",{children:"R"}),") to make sure the new configuration is loaded."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["(Optional) Adjust other options like ",(0,t.jsx)(n.code,{children:"auto_answer"})," or ",(0,t.jsx)(n.code,{children:"popup_config"})," as needed.",(0,t.jsx)(n.br,{}),"\n","See the ",(0,t.jsx)(n.a,{href:"/sip-hass-docs/docs/card/settings",children:"Settings documentation"})," for all available options and examples."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"add-the-cards",children:"Add the Card(s)"}),"\n",(0,t.jsx)(n.p,{children:"Now that SIP Core is configured, you can add cards to your dashboard to make and receive calls."}),"\n",(0,t.jsx)(n.h3,{id:"-contacts-card",children:"\ud83d\udcc7 Contacts Card"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"Contacts Card"})," shows a list of SIP endpoints (extensions) and lets you call them with a single click."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="Example: Contacts Card"',children:'type: custom:sip-contacts-card\nextensions:\n  "102":\n    name: Jordy\n    status_entity: binary_sensor.100_registered\n    override_icon: mdi:account\n  "103":\n    name: Desk phone\n    override_icon: mdi:deskphone\n  "8001":\n    name: Doorbell\n    override_icon: mdi:doorbell-video\n  "0612345678":\n    name: Test\n    override_icon: mdi:dialpad\n    edit: true\ndebug: false\nhide_me: false\nstate_color: true\n'})}),"\n",(0,t.jsxs)(n.p,{children:["See the ",(0,t.jsx)(n.a,{href:"/sip-hass-docs/docs/card/cards-popups/contacts-card",children:"Contacts Card documentation"})," for all options and features."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"-call-card-optional",children:"\ud83d\udcde Call Card (Optional)"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"Call Card"})," provides a full call interface directly in your dashboard, including call controls, video, and custom buttons."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="Example: Call Card"',children:'type: custom:sip-call-card\nextensions:\n  "101":\n    name: Jordy\n  "102":\n    name: Desk Phone\n    override_icon: mdi:deskphone\n  "8001":\n    name: Doorbell\n    camera_entity: camera.doorbell\nbuttons:\n  - label: Open Door\n    icon: mdi:door-open\n    type: service_call\n    data:\n      domain: light\n      service: toggle\n      entity_id: light.bedroom_lights\n  - label: DTMF 1\n    icon: mdi:1\n    type: dtmf\n    data:\n      dtmf: "1"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["See the ",(0,t.jsx)(n.a,{href:"/sip-hass-docs/docs/card/cards-popups/call-card",children:"Call Card documentation"})," for all options and features."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"\ufe0f-custom-cards",children:"\ud83d\udee0\ufe0f Custom Cards"}),"\n",(0,t.jsxs)(n.p,{children:["You can also create your own custom cards and popups to fit your needs.",(0,t.jsx)(n.br,{}),"\n","See the ",(0,t.jsx)(n.a,{href:"/sip-hass-docs/docs/developers/card/introduction",children:"developer documentation"})," for guides and examples on building your own SIP Core components."]}),"\n",(0,t.jsx)(n.h2,{id:"ssl",children:"SSL"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"WSS"})," (Secure WebSocket) requires ",(0,t.jsx)(n.strong,{children:"SSL"})," for security reasons. The add-on sets up Asterisk's part of that, but you may still need to set up your network to work with it."]}),"\n",(0,t.jsxs)(a.A,{groupId:"ssl-method",children:[(0,t.jsxs)(i.A,{value:"ingress",label:"Ingress (Recommended)",default:!0,children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)("b",{children:"Ingress"})," is the easiest and most secure way to use SIP Core with the Asterisk add-on.",(0,t.jsx)("br",{}),"\nHome Assistant tunnels the WebSocket connection through its own secure connection, so you don't need to set up SSL or port forwarding in Asterisk."]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"No need to open ports or manage certificates."}),"\n",(0,t.jsx)(n.li,{children:"Works out of the box with the add-on and SIP Core."}),"\n",(0,t.jsx)(n.li,{children:"Just use the default settings and let Home Assistant and SIP Core handle the rest."}),"\n"]}),(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["If you use the Asterisk add-on, Ingress is enabled by default.",(0,t.jsx)(n.br,{}),"\n","For technical details, see the ",(0,t.jsx)("a",{href:"/docs/developers/add-on/ingress",children:"developer docs"}),"."]})})]}),(0,t.jsxs)(i.A,{value:"manual",label:"Manual",children:[(0,t.jsxs)(n.p,{children:["You can temporarily accept the certificate manually by going to:",(0,t.jsx)("br",{}),"\n",(0,t.jsx)("code",{children:"https://<YOUR-HA-ADDRESS>:8089/ws"}),", click continue and accept. You should see ",(0,t.jsx)("b",{children:"Upgrade Required"}),"."]}),(0,t.jsx)(n.p,{children:"Now your browser accepts this certificate, even if the domain doesn't match."}),(0,t.jsxs)(n.admonition,{type:"warning",children:[(0,t.jsx)(n.p,{children:"This is only to temporarily test. This only works for a limited time and doesn't work for other devices."}),(0,t.jsx)("b",{children:"This is not a permanent solution!"})]})]}),(0,t.jsxs)(i.A,{value:"dns",label:"DNS Rewrite",children:[(0,t.jsxs)(n.p,{children:["It's possible to set a ",(0,t.jsx)("b",{children:"DNS rewrite"})," in your router, so your certificate domain points towards your ",(0,t.jsx)("b",{children:"local IP"}),".",(0,t.jsx)(n.br,{}),"\n","This way you don't have to port forward anything, but this only works locally."]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Set up a DNS rewrite so your domain resolves to your Home Assistant's local IP."}),"\n",(0,t.jsx)(n.li,{children:"Your browser will trust the certificate if the domain matches."}),"\n"]}),(0,t.jsxs)(n.p,{children:["You can find more info ",(0,t.jsx)("a",{href:"../add-on/guides/dns_rewrite",children:"here"}),"."]})]}),(0,t.jsxs)(i.A,{value:"portforward",label:"Port Forwarding",children:[(0,t.jsxs)(n.p,{children:["The classic way is to port forward ",(0,t.jsx)("code",{children:"8089"}),".",(0,t.jsx)(n.br,{}),"\n","Then you can set the ",(0,t.jsx)("code",{children:"server"})," option to your domain.",(0,t.jsx)(n.br,{}),"\n","You may also need to forward the ",(0,t.jsx)("b",{children:"RTP ports"}),", which are by default ",(0,t.jsx)("code",{children:"10000-20000"}),"."]}),(0,t.jsxs)(n.admonition,{type:"caution",children:[(0,t.jsxs)(n.p,{children:["If you do this, make sure you have ",(0,t.jsx)("b",{children:"secure passwords"})," for your extensions! Bots may try to brute-force it."]}),(0,t.jsxs)(n.p,{children:["If that happens often, you could set ",(0,t.jsx)("code",{children:"8089"})," to another non-standard port."]})]})]})]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},1470:(e,n,s)=>{s.d(n,{A:()=>w});var r=s(6540),t=s(8215),o=s(3104),a=s(6347),i=s(205),l=s(7485),d=s(1682),c=s(679);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:s}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return u(e).map((({props:{value:e,label:n,attributes:s,default:r}})=>({value:e,label:n,attributes:s,default:r})))}(s);return function(e){const n=(0,d.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,s])}function p({value:e,tabValues:n}){return n.some((n=>n.value===e))}function m({queryString:e=!1,groupId:n}){const s=(0,a.W6)(),t=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,l.aZ)(t),(0,r.useCallback)((e=>{if(!t)return;const n=new URLSearchParams(s.location.search);n.set(t,e),s.replace({...s.location,search:n.toString()})}),[t,s])]}function x(e){const{defaultValue:n,queryString:s=!1,groupId:t}=e,o=h(e),[a,l]=(0,r.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const s=n.find((e=>e.default))??n[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:o}))),[d,u]=m({queryString:s,groupId:t}),[x,j]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[s,t]=(0,c.Dv)(n);return[s,(0,r.useCallback)((e=>{n&&t.set(e)}),[n,t])]}({groupId:t}),f=(()=>{const e=d??x;return p({value:e,tabValues:o})?e:null})();(0,i.A)((()=>{f&&l(f)}),[f]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),j(e)}),[u,j,o]),tabValues:o}}var j=s(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=s(4848);function g({className:e,block:n,selectedValue:s,selectValue:r,tabValues:a}){const i=[],{blockElementScrollPositionUntilNextRender:l}=(0,o.a_)(),d=e=>{const n=e.currentTarget,t=i.indexOf(n),o=a[t].value;o!==s&&(l(n),r(o))},c=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const s=i.indexOf(e.currentTarget)+1;n=i[s]??i[0];break}case"ArrowLeft":{const s=i.indexOf(e.currentTarget)-1;n=i[s]??i[i.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":n},e),children:a.map((({value:e,label:n,attributes:r})=>(0,b.jsx)("li",{role:"tab",tabIndex:s===e?0:-1,"aria-selected":s===e,ref:e=>{i.push(e)},onKeyDown:c,onClick:d,...r,className:(0,t.A)("tabs__item",f.tabItem,r?.className,{"tabs__item--active":s===e}),children:n??e},e)))})}function y({lazy:e,children:n,selectedValue:s}){const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=o.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function v(e){const n=x(e);return(0,b.jsxs)("div",{className:(0,t.A)("tabs-container",f.tabList),children:[(0,b.jsx)(g,{...n,...e}),(0,b.jsx)(y,{...n,...e})]})}function w(e){const n=(0,j.A)();return(0,b.jsx)(v,{...e,children:u(e.children)},String(n))}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>i});var r=s(6540);const t={},o=r.createContext(t);function a(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(o.Provider,{value:n},e.children)}},9365:(e,n,s)=>{s.d(n,{A:()=>a});s(6540);var r=s(8215);const t={tabItem:"tabItem_Ymn6"};var o=s(4848);function a({children:e,hidden:n,className:s}){return(0,o.jsx)("div",{role:"tabpanel",className:(0,r.A)(t.tabItem,s),hidden:n,children:e})}}}]);