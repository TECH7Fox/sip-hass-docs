"use strict";(self.webpackChunksip_hass_docs=self.webpackChunksip_hass_docs||[]).push([[2683],{460:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"add-on/introduction","title":"Introduction","description":"The Asterisk Add-on is a PBX server. It is made to use with the card, comes preconfigured, and can generate PJSIP extensions for every person entity in Home Assistant.","source":"@site/docs/add-on/introduction.md","sourceDirName":"add-on","slug":"/add-on/introduction","permalink":"/sip-hass-docs/docs/add-on/introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/TECH7Fox/sip-hass-docs/edit/main/docs/add-on/introduction.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Introduction"},"sidebar":"addonSidebar","next":{"title":"Settings","permalink":"/sip-hass-docs/docs/add-on/settings"}}');var i=t(4848),o=t(8453);const r={sidebar_position:1,title:"Introduction"},d=void 0,c={},a=[{value:"Goal",id:"goal",level:2},{value:"Features",id:"features",level:2}];function l(e){const n={h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"Asterisk Add-on"})," is a PBX server. It is made to use with the card, comes preconfigured, and can generate ",(0,i.jsx)(n.strong,{children:"PJSIP extensions"})," for every person entity in ",(0,i.jsx)(n.strong,{children:"Home Assistant"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"goal",children:"Goal"}),"\n",(0,i.jsx)(n.p,{children:"The goal of the add-on is to make it possible to setup with the card, as easy and fast as possible."}),"\n",(0,i.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Comes preconfigured"}),"\n",(0,i.jsx)(n.li,{children:"Lightweight PBX"}),"\n",(0,i.jsx)(n.li,{children:"Preconfigured for the card"}),"\n",(0,i.jsx)(n.li,{children:"Websocket setup"}),"\n",(0,i.jsx)(n.li,{children:"Autogenerate WSS extensions"}),"\n",(0,i.jsx)(n.li,{children:"Mailbox integration"}),"\n",(0,i.jsx)(n.li,{children:"AMI configured for Asterisk integration"}),"\n",(0,i.jsx)(n.li,{children:"Googletts preinstalled"}),"\n",(0,i.jsx)(n.li,{children:"Speech-recognition preinstalled"}),"\n",(0,i.jsx)(n.li,{children:"Use your own certificate"}),"\n",(0,i.jsx)(n.li,{children:"Generate self-signed certificate"}),"\n",(0,i.jsx)(n.li,{children:"(Almost) fully configurable"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var s=t(6540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);