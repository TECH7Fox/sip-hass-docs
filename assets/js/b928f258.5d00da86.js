"use strict";(self.webpackChunksip_hass_docs=self.webpackChunksip_hass_docs||[]).push([[782],{3037:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"developers/card/api/index","title":"SIP Core API","description":"Classes","source":"@site/docs/developers/card/api/index.md","sourceDirName":"developers/card/api","slug":"/developers/card/api/","permalink":"/sip-hass-docs/docs/developers/card/api/","draft":false,"unlisted":false,"editUrl":"https://github.com/TECH7Fox/sip-hass-docs/edit/main/docs/developers/card/api/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"developersSidebar","previous":{"title":"Simple Card","permalink":"/sip-hass-docs/docs/developers/card/guides/standalone"},"next":{"title":"SIPCore","permalink":"/sip-hass-docs/docs/developers/card/api/classes/SIPCore"}}');var d=r(4848),i=r(8453);const t={},a="SIP Core API",c={},o=[{value:"Classes",id:"classes",level:2},{value:"Interfaces",id:"interfaces",level:2},{value:"Enumerations",id:"enumerations",level:2}];function l(e){const s={a:"a",h1:"h1",h2:"h2",header:"header",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(s.header,{children:(0,d.jsx)(s.h1,{id:"sip-core-api",children:"SIP Core API"})}),"\n",(0,d.jsx)(s.h2,{id:"classes",children:"Classes"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Class"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsx)(s.tbody,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/sip-hass-docs/docs/developers/card/api/classes/SIPCore",children:"SIPCore"})}),(0,d.jsx)(s.td,{children:"Main class for SIP Core functionality. Handles SIP registration, call management, and audio device management."})]})})]}),"\n",(0,d.jsx)(s.h2,{id:"interfaces",children:"Interfaces"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Interface"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/sip-hass-docs/docs/developers/card/api/interfaces/ICEConfig",children:"ICEConfig"})}),(0,d.jsx)(s.td,{children:"-"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/sip-hass-docs/docs/developers/card/api/interfaces/SIPCoreConfig",children:"SIPCoreConfig"})}),(0,d.jsx)(s.td,{children:"Configuration for SIP Core"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/sip-hass-docs/docs/developers/card/api/interfaces/User",children:"User"})}),(0,d.jsx)(s.td,{children:"Mapping of a Home Assistant username to a SIP user"})]})]})]}),"\n",(0,d.jsx)(s.h2,{id:"enumerations",children:"Enumerations"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Enumeration"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/sip-hass-docs/docs/developers/card/api/enumerations/AUDIO_DEVICE_KIND",children:"AUDIO_DEVICE_KIND"})}),(0,d.jsx)(s.td,{children:"Enum representing the kind of audio device"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/sip-hass-docs/docs/developers/card/api/enumerations/CALLSTATE",children:"CALLSTATE"})}),(0,d.jsx)(s.td,{children:"Enum representing the various states of a SIP call"})]})]})]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,d.jsx)(s,{...e,children:(0,d.jsx)(l,{...e})}):l(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>t,x:()=>a});var n=r(6540);const d={},i=n.createContext(d);function t(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);